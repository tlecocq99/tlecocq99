name: Simple Stats

on:
  schedule:
    - cron: "30 6 * * *"   # Daily at 06:30 UTC
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: simple-stats
  cancel-in-progress: false

jobs:
  stats:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Fetch & generate simple stats
        env:
          GH_TOKEN: ${{ secrets.GH_SIMPLE_STATS }}
          USERNAME: tlecocq99
        run: |
          set -euo pipefail

          # (Optional) enable tracing for one run:
          # set -x

          # Ensure jq exists (normally already present)
            if ! command -v jq >/dev/null 2>&1; then
              sudo apt-get update && sudo apt-get install -y jq
            fi

          QUERY='query($login:String!){
            user(login:$login){
              repositories(privacy: PUBLIC, ownerAffiliations: OWNER){
                totalCount
              }
              contributionsCollection{
                contributionCalendar{
                  totalContributions
                }
              }
            }
          }'
          VARIABLES='{"login":"'"$USERNAME"'"}'

          TMP_BODY=$(mktemp)
          HTTP_CODE=$(curl -sS -w "%{http_code}" -o "$TMP_BODY" \
            -H "Authorization: bearer $GH_TOKEN" \
            -X POST -d "{\"query\":\"${QUERY//$'\n'/ }\",\"variables\":$VARIABLES}" https://api.github.com/graphql)

          RESPONSE=$(cat "$TMP_BODY")
          rm -f "$TMP_BODY"

          if [ "$HTTP_CODE" != "200" ]; then
            echo "Non-200 HTTP status: $HTTP_CODE"
            echo "Response:"
            echo "$RESPONSE"
            exit 1
          fi

          if echo "$RESPONSE" | jq -e '.errors' >/dev/null 2>&1; then
            echo "GraphQL errors:"
            echo "$RESPONSE" | jq '.errors'
            exit 1
          fi

          TOTAL_PUBLIC_REPOS=$(echo "$RESPONSE" | jq -r '.data.user.repositories.totalCount // 0')
          TOTAL_CONTRIB=$(echo "$RESPONSE" | jq -r '.data.user.contributionsCollection.contributionCalendar.totalContributions // 0')

          # Sanity check
          if [ -z "$TOTAL_PUBLIC_REPOS" ] || [ -z "$TOTAL_CONTRIB" ]; then
            echo "Parsed empty values; raw response:"
            echo "$RESPONSE"
            exit 1
          fi

          cat > simple-stats.md <<EOF
          **Quick Stats (Auto-Updated)**  
          Public Repos: ${TOTAL_PUBLIC_REPOS} â€¢ Last 12 Months Contributions: ${TOTAL_CONTRIB}  
          _Last updated: $(date -u +"%Y-%m-%d %H:%M UTC")_
          EOF

          if git diff --quiet simple-stats.md 2>/dev/null; then
            echo "No changes detected; skipping commit."
          else
            git config user.name "github-actions"
            git config user.email "actions@users.noreply.github.com"
            git add simple-stats.md
            git commit -m "chore: update simple stats"
            git push
            echo "Updated simple-stats.md committed."
          fi
